plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.sam'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sourceSets {
    repositoryTest {
        java {
            srcDir 'src/repositoryTest/java'
        }
        resources {
            srcDir 'src/repositoryTest/resources'
        }
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    repositoryTestImplementation.extendsFrom testImplementation
    repositoryTestRuntimeOnly.extendsFrom testRuntimeOnly
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'

    // Repository test dependencies
    repositoryTestImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    repositoryTestImplementation 'org.springframework.boot:spring-boot-starter-test'
    repositoryTestImplementation 'org.testcontainers:junit-jupiter'
    repositoryTestRuntimeOnly 'org.testcontainers:mysql'

}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('repositoryTest', Test) {
    description = 'Runs the repository integration tests.'
    group = 'verification'

    // Set test classes and classpath for repositoryTest
    testClassesDirs = sourceSets.repositoryTest.output.classesDirs
    classpath = sourceSets.repositoryTest.runtimeClasspath

    // Use JUnit for running the tests
    useJUnitPlatform()
}

// Handle duplicate resource files in repositoryTest
tasks.named('processRepositoryTestResources') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
